services:
  db:
    image: neo4j:5.11
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/testpassword
      - NEO4J_server_memory_heap_max__size=4G
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "-a", "bolt://localhost:7687", "RETURN 1;"]
      interval: 5s
      timeout: 10s
      retries: 12
      start_period: 10s
    networks:
      - mynetwork

  app:
    image: myapp:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=testpassword
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./output:/app/output
    networks:
      - mynetwork

networks:
  mynetwork: 
    driver: bridge

volumes:
  neo4j_data:



# version: "3.8"

# services:
#   db:
#     image: neo4j:5.11
#     container_name: neo4j1
#     environment:
#       - NEO4J_AUTH=neo4j/testpassword
#       - NEO4J_dbms_memory_heap_max__size=4G
#     ports:
#       - "7474:7474"
#       - "7687:7687"
#     volumes:
#       - neo4j_data:/data
#     networks:
#       - mynetwork

#   app:
#     image: myapp:latest
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "5001:5001"
#     environment:
#       - NODE_ENV=production
#       - NEO4J_URI=bolt://neo4j:7687
#       - NEO4J_USERNAME=neo4j
#       - NEO4J_PASSWORD=testpassword
#     volumes:
#       - ./app:/usr/src/app
#       - ./models:/app/models
#     networks:
#       - mynetwork
#     depends_on:
#       - db

# networks:
#   mynetwork: 

# volumes:
#   neo4j_data:
